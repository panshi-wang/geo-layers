I use the -O3 -ffloat-store compiler flag combination to get

(i) computation speed and
(ii) consistant results.

If I don't use the -ffloat-store compiler flag, my results are
not consistent accross computational platforms.

From the gcc on-line help:

       The following options control compiler behavior regarding floating
       point arithmetic.  These options trade off between speed and correct-
       ness.  All must be specifically enabled.

       -ffloat-store
           Do not store floating point variables in registers, and inhibit
           other options that might change whether a floating point value is
           taken from a register or memory.

           This option prevents undesirable excess precision on machines such
           as the 68000 where the floating registers (of the 68881) keep more
           precision than a "double" is supposed to have.  Similarly for the
           x86 architecture.  For most programs, the excess precision does
           only good, but a few programs rely on the precise definition of
           IEEE floating point.  Use -ffloat-store for such programs, after
           modifying them to store all pertinent intermediate computations
           into variables.
